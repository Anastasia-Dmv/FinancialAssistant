{"version":3,"sources":["components/PlanForm/planFormStyled.js","components/PlanForm/PlanForm.js","redux/actions/userInfoAction.js","redux/operations/userInfoOperation.js","assets/images/planPage/decor.svg","components/PrognosisBuy/prognosisBuyStyled.js","components/PrognosisBuy/PrognosisBuy.js","pages/PlanPage/planPageStyled.js","pages/PlanPage/PlanPage.js"],"names":["PlanFormStyled","styled","div","size","tablet","desktop","placeHolder","PlanForm","state","getState","useState","isFieldActive","setFieldActive","onHandleChange","e","target","name","value","className","type","totalSalary","placeholder","onChange","passiveIncome","balance","flatPrice","flatSquareMeters","incomePercentageToSavings","onFocus","onBlur","userInfoConstants","UPDATE_USER_REQUEST","user","UPDATE_USER_SUCCESS","payload","error","UPDATE_USER_ERROR","axios","defaults","baseURL","userInfo","dispatch","a","persistedToken","authSelector","isAuthenticated","token","set","userInfoAction","put","result","console","log","data","message","PrognosisBuyStyled","beforeTablet","beforeDesktop","PrognosisBuy","fields","years","setYears","monthes","setMonthes","declOfNum","number","words","useEffect","incomeToSavings","Number","requiredAmount","yearsResult","Math","floor","monthesResult","ceil","getResult","useDispatch","onSubmit","preventDefault","operation","src","decor","alt","PlanPageStyled","PlanPage"],"mappings":"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","file":"static/js/8.988b585a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { size } from '../../common/deviceSizes';\r\n\r\nexport const PlanFormStyled = styled.div`\r\n  margin-bottom: 14px;\r\n  form,\r\n  label {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  label {\r\n    position: relative;\r\n    width: 280px;\r\n    color: rgb(24, 25, 31, 0.54);\r\n    margin-bottom: 35px;\r\n  }\r\n  span {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 12px;\r\n  }\r\n  span,\r\n  p {\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n  }\r\n  span,\r\n  p,\r\n  input {\r\n    font-weight: 400;\r\n  }\r\n  label:hover,\r\n  label:focus {\r\n    color: rgb(33, 150, 243);\r\n  }\r\n  input {\r\n    background: rgba(0, 0, 0, 0.03);\r\n    padding: 30px 12px 12px;\r\n    color: rgba(24, 25, 31, 0.87);\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    border: none;\r\n    border-bottom: 1px solid rgba(24, 25, 31, 0.36);\r\n    border-radius: 8px 8px 0px 0px;\r\n  }\r\n  .secondColumn label:nth-of-type(1) input,\r\n  .secondColumn label:nth-of-type(2) input {\r\n    padding-top: 44px;\r\n  }\r\n  p {\r\n    height: 30px;\r\n    color: rgba(24, 25, 31, 0.54);\r\n    padding-top: 4px;\r\n  }\r\n  input:hover,\r\n  input:focus {\r\n    border-bottom: 1px solid rgb(33, 150, 243);\r\n  }\r\n\r\n  @media (min-width: ${size.tablet}) {\r\n    form {\r\n      flex-direction: row;\r\n    }\r\n    .firstColumn {\r\n      margin-right: 30px;\r\n    }\r\n    label {\r\n      width: 330px;\r\n    }\r\n    label:not(:last-of-type) {\r\n      margin-bottom: 52px;\r\n    }\r\n    .secondColumn label:nth-of-type(1) input,\r\n    .secondColumn label:nth-of-type(2) input {\r\n      padding-top: 30px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${size.desktop}) {\r\n    label {\r\n      width: 370px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { PlanFormStyled } from './planFormStyled';\r\n\r\nconst placeHolder = 'Введите сумму';\r\n\r\nfunction PlanForm({ state, getState }) {\r\n  const [isFieldActive, setFieldActive] = useState(false);\r\n\r\n  const onHandleChange = e => {\r\n    getState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onHandleFocus = () => setFieldActive(true);\r\n  const onHandleBlur = () => setFieldActive(false);\r\n\r\n  return (\r\n    <PlanFormStyled>\r\n      <form>\r\n        <div className=\"firstColumn\">\r\n          <label>\r\n            <span>1. ЗП обоих супругов</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"totalSalary\"\r\n              value={!state.totalSalary ? '' : state.totalSalary}\r\n              placeholder={placeHolder}\r\n              onChange={onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>2. Пассивные доходы, мес.</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"passiveIncome\"\r\n              value={!state.passiveIncome ? '' : state.passiveIncome}\r\n              placeholder={placeHolder}\r\n              onChange={onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>3. Сбережения</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"balance\"\r\n              value={!state.balance ? '' : state.balance}\r\n              placeholder={placeHolder}\r\n              onChange={onHandleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"secondColumn\">\r\n          <label>\r\n            <span>4. Укажите стоимость вашей будущей квартиры</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"flatPrice\"\r\n              value={!state.flatPrice ? '' : state.flatPrice}\r\n              placeholder={placeHolder}\r\n              onChange={onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>5. Укажите кол-во кв. м вашей будущей квартиры</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"flatSquareMeters\"\r\n              value={!state.flatSquareMeters ? '' : state.flatSquareMeters}\r\n              placeholder={placeHolder}\r\n              onChange={onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>6. Накопление, %</span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"incomePercentageToSavings\"\r\n              value={\r\n                !state.incomePercentageToSavings\r\n                  ? ''\r\n                  : state.incomePercentageToSavings\r\n              }\r\n              placeholder={placeHolder}\r\n              onFocus={onHandleFocus}\r\n              onBlur={onHandleBlur}\r\n              onChange={onHandleChange}\r\n            />\r\n            <p>\r\n              {!!isFieldActive &&\r\n                'Укажите процент, который бы хотели накапливать в месяц от общей суммы доходов и вы увидите, когда достигните цели'}\r\n            </p>\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </PlanFormStyled>\r\n  );\r\n}\r\n\r\nexport default PlanForm;\r\n","import userInfoConstants from '../constants/userInfoConstants';\r\n\r\nconst updateUserInfoRequest = () => ({\r\n  type: userInfoConstants.UPDATE_USER_REQUEST,\r\n});\r\n\r\nconst updateUserInfoSuccess = user => ({\r\n  type: userInfoConstants.UPDATE_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst updateUserInfoError = error => ({\r\n  type: userInfoConstants.UPDATE_USER_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport default {\r\n  updateUserInfoRequest,\r\n  updateUserInfoSuccess,\r\n  updateUserInfoError,\r\n};\r\n","import axios from 'axios';\r\nimport userInfoAction from '../actions/userInfoAction';\r\nimport { authSelector } from '../selectors';\r\nimport { token } from './authOperations';\r\n\r\naxios.defaults.baseURL = 'https://financial-assistant-bc22.herokuapp.com';\r\n\r\nconst updateUserInfo = userInfo => async (dispatch, getState) => {\r\n  const persistedToken = authSelector.isAuthenticated(getState());\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(userInfoAction.updateUserInfoRequest());\r\n  try {\r\n    const result = await axios.put('/api/v1/users/savings-info', userInfo);\r\n    console.log('update UserInfo', result.data);\r\n    dispatch(userInfoAction.updateUserInfoSuccess(result.data));\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch(userInfoAction.updateUserInfoError(err));\r\n  }\r\n};\r\n\r\nexport default { updateUserInfo };\r\n","export default __webpack_public_path__ + \"static/media/decor.ac79f6b9.svg\";","import styled from 'styled-components';\r\nimport { size } from '../../common/deviceSizes';\r\n\r\nexport const PrognosisBuyStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .wrapper {\r\n    width: 280px;\r\n    height: 322px;\r\n    padding: 34px 12px;\r\n  }\r\n  h2 {\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-weight: 500;\r\n    margin-bottom: 23px;\r\n  }\r\n  label {\r\n    position: relative;\r\n  }\r\n  span {\r\n    position: absolute;\r\n    left: 13px;\r\n    bottom: 26px;\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    padding: 0px 4px;\r\n  }\r\n  .wrapper,\r\n  span {\r\n    background: rgb(55, 59, 83);\r\n  }\r\n  input {\r\n    width: 200px;\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    border: 1px solid rgba(255, 255, 255, 0.36);\r\n    background: rgba(0, 0, 0, 0.03);\r\n    padding: 12px 18px;\r\n  }\r\n  span,\r\n  input {\r\n    font-weight: 400;\r\n  }\r\n  span,\r\n  input::placeholder {\r\n    color: rgba(255, 255, 255, 0.54);\r\n  }\r\n  button {\r\n    width: 200px;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    font-weight: 700;\r\n    border: none;\r\n    background: rgb(255, 108, 0);\r\n    cursor: pointer;\r\n  }\r\n  input,\r\n  button {\r\n    height: 56px;\r\n  }\r\n  .wrapper,\r\n  input,\r\n  button {\r\n    border-radius: 8px;\r\n  }\r\n  h2,\r\n  input,\r\n  button {\r\n    color: rgb(255, 255, 255);\r\n  }\r\n  img {\r\n    width: 130px;\r\n    height: 99px;\r\n  }\r\n\r\n  @media (max-width: ${size.beforeTablet}) {\r\n    text-align: center;\r\n    .wrapper {\r\n      margin-bottom: 34px;\r\n    }\r\n    input {\r\n      margin-bottom: 23px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${size.tablet}) {\r\n    .wrapper {\r\n      width: 690px;\r\n      height: 151px;\r\n      padding: 24px 25px;\r\n    }\r\n    label {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${size.beforeDesktop}) {\r\n    .wrapper {\r\n      margin-bottom: 74px;\r\n    }\r\n    img {\r\n      width: 238px;\r\n      height: 182px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${size.desktop}) {\r\n    flex-direction: row;\r\n    .wrapper {\r\n      width: 770px;\r\n      padding-right: 65px;\r\n      padding-left: 65px;\r\n      margin-left: 127px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport operation from '../../redux/operations/userInfoOperation';\r\nimport decor from '../../assets/images/planPage/decor.svg';\r\nimport { PrognosisBuyStyled } from './prognosisBuyStyled';\r\n\r\nfunction PrognosisBuy({ fields }) {\r\n  const [years, setYears] = useState(0);\r\n  const [monthes, setMonthes] = useState(0);\r\n\r\n  const getResult = () => {\r\n    if (\r\n      (fields.totalSalary || fields.passiveIncome || fields.balance) &&\r\n      fields.flatPrice &&\r\n      fields.incomePercentageToSavings &&\r\n      fields.balance <= fields.flatPrice\r\n    ) {\r\n      const incomeToSavings =\r\n        ((Number(fields.totalSalary) + Number(fields.passiveIncome)) *\r\n          Number(fields.incomePercentageToSavings)) /\r\n        100;\r\n      const requiredAmount = Number(fields.flatPrice) - Number(fields.balance);\r\n      const yearsResult = Math.floor(requiredAmount / incomeToSavings / 12);\r\n      const monthesResult = Math.ceil(\r\n        requiredAmount / incomeToSavings - yearsResult * 12,\r\n      );\r\n\r\n      setYears(yearsResult);\r\n      setMonthes(monthesResult);\r\n    } else {\r\n      setYears(0);\r\n      setMonthes(0);\r\n    }\r\n  };\r\n\r\n  // const reg = /\\s/;\r\n  // const yearsArray = yearsResult.toLocaleString().split('');\r\n  // const yearsArray = years.toString().split('');\r\n  // const lastIndexOfYearsArray = yearsArray[yearsArray.length - 1];\r\n  // const monthesArray = monthes.toString().split('');\r\n  // const lastIndexOfMonthesArray = monthes[monthes.length - 1];\r\n\r\n  function declOfNum(number, words) {\r\n    return words[\r\n      number % 100 > 4 && number % 100 < 20\r\n        ? 2\r\n        : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\r\n    ];\r\n  }\r\n\r\n  useEffect(() => {\r\n    getResult();\r\n    // changeWord();\r\n  }, [fields]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(operation.updateUserInfo(fields));\r\n  };\r\n\r\n  return (\r\n    <PrognosisBuyStyled>\r\n      {/* {console.log('state!!!', fields)} */}\r\n      {/* {console.log('incomeToSaving', incomeToSavings)} */}\r\n      {/* {console.log('years!!!', years)}\r\n      {console.log('monthes!!!', monthes)} */}\r\n      {/* {console.log('yearsArray!!!', yearsArray)}\r\n      {console.log('monthesArray!!!', monthesArray)} */}\r\n      <div className=\"wrapper\">\r\n        <h2>У вас будет квартира через:</h2>\r\n        <form onSubmit={onHandleSubmit}>\r\n          <label>\r\n            {/* {console.log(yearsArray)} */}\r\n            {/* {console.log(yearsArray[yearsArray.length - 1])} */}\r\n            {/* {console.log(lastIndexOfYearsArray)} */}\r\n            <input\r\n              type=\"text\"\r\n              name=\"years\"\r\n              value={\r\n                !years\r\n                  ? ''\r\n                  : years + ' ' + declOfNum(years, ['год', 'года', 'лет'])\r\n              }\r\n              onChange={() => {}}\r\n              placeholder=\"0 лет\"\r\n            />\r\n            <span>Кол-во лет</span>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"monthes\"\r\n              value={\r\n                !monthes\r\n                  ? ''\r\n                  : monthes +\r\n                    ' ' +\r\n                    declOfNum(monthes, ['месяц', 'месяца', 'месяцев'])\r\n              }\r\n              onChange={() => {}}\r\n              placeholder=\"0 месяцев\"\r\n            />\r\n            <span>Кол-во месяцев</span>\r\n          </label>\r\n          <button type=\"submit\">Подходит</button>\r\n        </form>\r\n      </div>\r\n      <img src={decor} alt=\"элемент декора\" />\r\n    </PrognosisBuyStyled>\r\n  );\r\n}\r\n\r\nexport default PrognosisBuy;\r\n","import styled from 'styled-components';\r\nimport { size } from '../../common/deviceSizes';\r\n\r\nexport const PlanPageStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 34px 20px 42px;\r\n  font-family: 'Roboto';\r\n  font-size: 0px;\r\n\r\n  @media (min-width: ${size.tablet}) {\r\n    padding: 74px 39px;\r\n  }\r\n\r\n  @media (min-width: ${size.desktop}) {\r\n    padding: 64px 0px 74px;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PlanForm from '../../components/PlanForm/PlanForm';\r\nimport PrognosisBuy from '../../components/PrognosisBuy/PrognosisBuy';\r\nimport { PlanPageStyled } from './planPageStyled';\r\n\r\nconst fields = {\r\n  totalSalary: 0,\r\n  passiveIncome: 0,\r\n  balance: 0,\r\n  flatPrice: 0,\r\n  flatSquareMeters: 0,\r\n  incomePercentageToSavings: 0,\r\n};\r\n\r\nconst PlanPage = () => {\r\n  const [state, getState] = useState(fields);\r\n  return (\r\n    <PlanPageStyled>\r\n      <PlanForm state={state} getState={getState} />\r\n      <PrognosisBuy fields={{ ...state }} />\r\n    </PlanPageStyled>\r\n  );\r\n};\r\n\r\nexport default PlanPage;\r\n"],"sourceRoot":""}